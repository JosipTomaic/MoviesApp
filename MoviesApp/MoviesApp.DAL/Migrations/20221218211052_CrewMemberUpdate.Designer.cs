// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApp.DAL;

#nullable disable

namespace MoviesApp.DAL.Migrations
{
    [DbContext(typeof(MoviesAppContext))]
    [Migration("20221218211052_CrewMemberUpdate")]
    partial class CrewMemberUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoviesApp.DAL.Models.CrewMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TmdbId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TmdbId")
                        .IsUnique();

                    b.ToTable("CrewMember");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.CrewMemberMovieCredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CrewMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieCreditId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CrewMemberId");

                    b.HasIndex("MovieCreditId");

                    b.HasIndex("MovieId");

                    b.ToTable("CrewMembereMovieCredit");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TmdbId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TmdbId")
                        .IsUnique();

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Popularity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TmbdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TmbdId")
                        .IsUnique();

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.MovieCredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieCredit");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenre");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.CrewMemberMovieCredit", b =>
                {
                    b.HasOne("MoviesApp.DAL.Models.CrewMember", "CrewMember")
                        .WithMany("CrewMemberMovieCredits")
                        .HasForeignKey("CrewMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApp.DAL.Models.MovieCredit", "MovieCredit")
                        .WithMany("CrewMemberMovieCredits")
                        .HasForeignKey("MovieCreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApp.DAL.Models.Movie", "Movie")
                        .WithMany("CrewMemberMovieCredits")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrewMember");

                    b.Navigation("Movie");

                    b.Navigation("MovieCredit");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.MovieGenre", b =>
                {
                    b.HasOne("MoviesApp.DAL.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApp.DAL.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.CrewMember", b =>
                {
                    b.Navigation("CrewMemberMovieCredits");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.Movie", b =>
                {
                    b.Navigation("CrewMemberMovieCredits");

                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("MoviesApp.DAL.Models.MovieCredit", b =>
                {
                    b.Navigation("CrewMemberMovieCredits");
                });
#pragma warning restore 612, 618
        }
    }
}
